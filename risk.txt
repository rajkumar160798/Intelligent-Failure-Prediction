WITH session_base AS (
  SELECT
    v.session_id,
    v.visit_start_date_time,
    v.device_type,
    v.individual_analytics_identifier,
    v.visit_duration_seconds,
    v.login_indicator,
    r.ah_successful_login,
    r.test_member_indicator,
    r.web_mobile,
    CASE WHEN r.session_id IS NOT NULL THEN 'rx_session' ELSE 'visit_only' END AS session_type,
    CASE
      WHEN v.first_web_visit_date_time IS NOT NULL THEN 'Web First'
      WHEN v.first_mobile_visit_date_time IS NOT NULL THEN 'Mobile First'
      ELSE 'Unknown'
    END AS first_touchpoint,
    v.cnt_claim_view,
    v.claim_view_indicator,
    v.cnt_execute_search,
    v.execute_search_indicator
  FROM visit v
  LEFT JOIN rx_visit r ON v.session_id = r.session_id
),

aggregated_sessions AS (
  SELECT
    session_type,
    first_touchpoint,
    device_type,
    web_mobile,
    COUNT(DISTINCT session_id) AS total_sessions,
    COUNT(DISTINCT individual_analytics_identifier) AS unique_users,
    AVG(visit_duration_seconds) AS avg_duration,
    SUM(CASE WHEN login_indicator = 1 THEN 1 ELSE 0 END) AS total_visits_logged_in,
    SUM(CASE WHEN ah_successful_login = 1 THEN 1 ELSE 0 END) AS total_rx_logins,
    SUM(cnt_claim_view) AS total_claim_views,
    SUM(cnt_execute_search) AS total_searches,
    AVG(cnt_claim_view) AS avg_claim_views,
    AVG(cnt_execute_search) AS avg_searches
  FROM session_base
  GROUP BY session_type, first_touchpoint, device_type, web_mobile
)

SELECT * FROM aggregated_sessions
